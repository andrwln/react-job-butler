{"version":3,"file":"static/webpack/static/development/pages/_app.js.a75f475d885f44700d05.hot-update.js","sources":["webpack:///./saga.js"],"sourcesContent":["/* global fetch */\n\nimport { delay } from 'redux-saga';\nimport { all, call, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\n\nimport { actionTypes, failure, loadDataSuccess, tickClock } from './actions';\n\nes6promise.polyfill();\n\n// function * runClockSaga () {\n//   yield take(actionTypes.START_CLOCK)\n//   while (true) {\n//     yield put(tickClock(false))\n//     yield call(delay, 1000)\n//   }\n// }\n\n// function * loadDataSaga () {\n//   try {\n//     const res = yield fetch('https://jsonplaceholder.typicode.com/users')\n//     const data = yield res.json()\n//     yield put(loadDataSuccess(data))\n//   } catch (err) {\n//     yield put(failure(err))\n//   }\n// }\n\n// function * rootSaga () {\n//   yield all([\n//     call(runClockSaga),\n//     takeLatest(actionTypes.LOAD_DATA, loadDataSaga)\n//   ])\n// }\n\nexport default rootSaga;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}